pipeline{

      agent any
       
        tools {
               jdk 'JAVA_HOME'
               maven 'M2_HOME'
               }


        
stages{
	
	 
        stage('Getting project from Github') {
            steps {
	         script {
                       git branch : 'stock' ,
                       url : 'https://github.com/ahmedaziz-code/app-achat.git';
                        }
		  }
		  }

       stage('Cleaning the project') {
                 steps{
                    sh "mvn -B -DskipTests clean  "
                    }
                }


	stage('Build') {
      		    steps {
        		sh 'mvn -B -DskipTests clean package'
      		          }
            	}	  
	stage('Testing process') {
                              steps {
                sh '''mvn -version
                mvn -B -DskipTests clean package'''
                //sh 'mvn test'
                echo """Bravo! tous les tests sont pris en charge"""
                }

                            }


               stage('Quality Gate Status Check'){
                  steps{
                      script{
			      withSonarQubeEnv('sonar') {
			      sh "mvn compile sonar:sonar"
                       	     	}
			      timeout(time: 1, unit: 'HOURS') {
			      def qg = waitForQualityGate()
				      if (qg.status != 'OK') {
					   error "Pipeline aborted due to quality gate failure: ${qg.status}"
				      }
                    		}
		    	    sh "mvn clean install"

                 	}
               	 }
              }                                             

}
	 post {
                success {
                     mail to: "laouinikhoubaib@gmail.com",
                            subject: "Build sucess",
                            body: "sucess"
                            echo 'successful'
                        }
                failure {
                     mail to: "laouinikhoubaib@gmail.com",
                            subject: "Build failed",
                            body: "failed"
                    echo 'failed'
                        }
              }	
	      	           
}
